@model CSM.Web.Models.LookupContractViewModel
@using CSM.Common.Resources

@{Layout = null;}
<div class="form-horizontal">
    <div id="divBasicSearch">
        <div style="color:red;padding:0 0 10px;">
            * หากต้องการค้นหาบางส่วนของคำ ให้ใส่ * ไว้ด้านหน้าหรือด้านหลังของคำค้นหาที่ Field
            <strong class="text-primary">ตัวอักษรสี น้ำเงิน</strong>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <div class="col-md-5">
                        <p class="form-control-static">
                            Product
                        </p>
                    </div>
                    <div class="col-md-7 nopadding">
                        @Html.DropDownListFor(m => m.ContactSearchFilter.Product, Model.CustomerProductList,
                                                        Resource.Ddl_PleaseSelect, new { @class = "form-control input-sm  input-medium", id = "ddlCustomerProduct" })
                        @Html.ValidationMessageFor(m => m.ContactSearchFilter.Product)
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <div class="col-md-5">
                        <p class="form-control-static">
                            เลขที่บัญชี/สัญญา
                        </p>
                    </div>
                    <div class="col-md-7 nopadding">
                        @Html.TextBoxFor(m => m.ContactSearchFilter.AccountNo, new
                        {
                            @class = "form-control input-sm input-medium",
                            @id = "txtAccountNo",
                            @maxlength = 100,
                            @disabled = true
                        })
                        @Html.ValidationMessageFor(m => m.ContactSearchFilter.AccountNo)
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <div class="col-md-5">
                        <p class="form-control-static">
                            Customer Type
                        </p>
                    </div>
                    <div class="col-md-7 nopadding">
                        @Html.DropDownListFor(m => m.ContactSearchFilter.CustomerType, Model.CustomerTypeList,
                                              Resource.Ddl_PleaseSelect, new { @class = "form-control input-sm  input-medium", id = "ddlCustomerType" })
                        @Html.ValidationMessageFor(m => m.ContactSearchFilter.CustomerType)
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <div class="col-md-5">
                        <p class="form-control-static ">
                            ทะเบียนรถยนต์
                        </p>
                    </div>
                    <div class="col-md-7 nopadding">
                        @Html.TextBoxFor(m => m.ContactSearchFilter.Registration, new
                        {
                            @class = "form-control input-sm input-medium",
                            @id = "txtRegistration",
                            @maxlength = 50
                        })
                        @Html.ValidationMessageFor(m => m.ContactSearchFilter.Registration)
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <div class="col-md-5">
                        <p class="form-control-static ">
                            ชื่อผู้ค้ำ
                        </p>
                    </div>
                    <div class="col-md-7 nopadding">
                        @Html.TextBoxFor(model => model.ContactSearchFilter.CustomerDeptFirstName, new
                        {
                            @class = "form-control input-sm input-medium",
                            @id = "txtDeptFirstName",
                            @maxlength = 50
                        })
                        @Html.ValidationMessageFor(model => model.ContactSearchFilter.CustomerDeptFirstName)
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <div class="col-md-5">
                        <p class="form-control-static ">
                            นามสกุลผู้ค้ำ
                        </p>
                    </div>
                    <div class="col-md-7 nopadding">
                        @Html.TextBoxFor(model => model.ContactSearchFilter.CustomerDeptLastName, new
                        {
                            @class = "form-control input-sm input-medium",
                            @id = "txtDeptLastName",
                            @maxlength = 50
                        })
                        @Html.ValidationMessageFor(model => model.ContactSearchFilter.CustomerDeptLastName)
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group">
                <div class="col-sm-12 text-right">
                    <span class="btn btn-sm btn-primary" id="btnSearchAccountSearch"><i class="fa fa-search"></i> Search</span>
                    <span class="btn btn-sm btn-default" id="btnSearchAccountClear"><i class="fa fa-file-o"></i> Clear</span>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="table-responsive" id="divSearchAccount" style="display: none">
    <div id="dvSearchContractTable"></div>
</div>



<script type="text/javascript">
    var contactSearchFilter;
    var contactSuccessFilter;

    $jq(function () {
        initializeSearchFilter();
        initializePaging();

        $jq("#btnSearchAccountSearch").click(onBtnSearchAccountSearchClick);
        $jq("#btnSearchAccountClear").click(onBtnSearchAccountClearClick);

        $jq(".searchAccountInput").keypress(onSearchAccountKeyPressEnter);

        onBtnSearchAccountSearchClick();
    });

    function onSearchAccountKeyPressEnter(e) { if (e.which == 13) onBtnSearchAccountSearchClick(); }


    function onBtnSearchAccountSearchClick() {
        if ($jq("#hiddenCustomerId").val().trim().length === 0 && $jq("#hiddenCustomerNumber").val().trim().length === 0)
        {
            doModal('dvAlertMsg', 'Message Dialog', 'โปรดเลือกลูกค้าก่อน', '', '');
            return;
        }

        $jq("#divSearchAccount").show();
        loadContactTable();
    }

    //data table
    function loadContactTable() {
        //get criteria
        getSearchFilterCriteria();

        $jq.ajax({
                url: "@Url.Action("SearchAccount", "ServiceRequest")",
                method: "POST",
                data: contactSearchFilter,
                beforeSend: function() { $jq("#dvLoading").show(); },
                complete: function() { $jq("#dvLoading").hide(); }
            })
            .done(function(result) {
                if (result.Valid == null) {
                    $jq("#dvSearchContractTable").html('');
                    contactSuccessFilter = contactSearchFilter;
                    $jq("#dvSearchContractTable").html(result);
                    initializePaging();
                } else {
                    showServerErrors(result);
                }
            })
            .fail(function() {
                if (xhr.status === 401) {
                    location.replace('@FormsAuthentication.LoginUrl');
                    return;
                } else {
                    var errorMsg = String.format('<strong>Error:</strong>&nbsp;{0}', '@CSM.Common.Resources.Resource.Error_System');
                    doModal('dvAlertMsg', 'Message Dialog', errorMsg, '', '');
                }
            });
    }

    function getSearchFilterCriteria() {
        contactSearchFilter.CustomerId = $jq("#hiddenCustomerId").val();
        contactSearchFilter.CustomerNo = $jq("#hiddenCustomerNumber").val();
        contactSearchFilter.AccountNo = $jq("#txtSearchAccountAccountNo").val();
        contactSearchFilter.Status = $jq("#txtSearchAccountStatus").val();
        contactSearchFilter.CarNo = $jq("#txtSearchAccountCarNo").val();
        contactSearchFilter.ProductGroupName = $jq("#txtSearchAccountProductGroupName").val();
        contactSearchFilter.ProductName = $jq("#txtSearchAccountProductName").val();
        contactSearchFilter.BranchName = $jq("#txtSearchAccountBranchName").val();
    }

    function initializeSearchFilter() {
        contactSearchFilter = {
            CustomerId: $jq("#hiddenCustomerId").val(),
            CustomerNo: $jq("#hiddenCustomerNumber").val(),
            AccountNo: $jq("#txtSearchCustomerLastname").val(),
            Status: $jq("#txtSearchAccountStatus").val(),
            CarNo: $jq("#txtSearchAccountCarNo").val(),
            ProductGroupName: $jq("#txtSearchAccountProductGroupName").val(),
            ProductName: $jq("#txtSearchAccountProductName").val(),
            BranchName: $jq("#txtSearchAccountBranchName").val(),
            PageNo: '@Model.ContactSearchFilter.PageNo',
            PageSize: '@Model.ContactSearchFilter.PageSize',
            SortField: '@Model.ContactSearchFilter.SortField',
            SortOrder: '@Model.ContactSearchFilter.SortOrder',
            __RequestVerificationToken: getAntiForgeryToken()
        };
        contactSuccessFilter = contactSearchFilter;
    }

    function initializePaging() {
        $jq("#dvSearchContractTable .input-page").change(function (event) {
            contactSearchFilter = contactSuccessFilter;
            contactSearchFilter.PageNo = $jq(this).val();
            loadContactTable();
            return false;
        }).keypress(function (event) {
            return validateDigit(event);
        });

        $jq("#dvSearchContractTable #pagesizelist").change(function (event) {
            contactSearchFilter = contactSuccessFilter;
            contactSearchFilter.PageNo = "1";
            contactSearchFilter.PageSize = $jq(this).val();
            loadContactTable();
            return false;
        });

        $jq('#dvSearchContractTable .pagination ul li a').on('click', function (event) {
            contactSearchFilter = contactSuccessFilter;
            contactSearchFilter.PageNo = getUrlParameter($jq(this).attr("href"), "page");
            loadContactTable();
            return false;
        });
    }

    function onBtnSearchAccountClearClick() {
        $jq("#txtSearchAccountAccountNo").val("");
        $jq("#txtSearchAccountCarNo").val("");
        $jq("#txtSearchAccountProductGroupName").val("");
        $jq("#txtSearchAccountBranchName").val("");
        $jq("#txtSearchAccountProductName").val("");
        $jq("#txtSearchAccountStatus").val("");

        $jq("#txtSearchAccountAccountNo").focus();
        loadContactTable();

    }

</script>
