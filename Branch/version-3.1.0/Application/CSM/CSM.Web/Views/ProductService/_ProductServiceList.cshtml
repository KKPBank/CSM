@model CSM.Web.Models.ProductServiceViewModel
@using CSM.Common.Resources
@using CSM.Common.Utilities
@using MvcPaging;
@helper LabelForSort(string headerText, string fieldName, string sortField, string sortOrder)
{
    <a href="javascript:;" onclick="sortField('@fieldName');return false;">
        @headerText
        @if (fieldName.ToLower().Equals(sortField.ToLower()))
        {
            if (sortOrder.Equals("ASC"))
            {<i class="fa fa-sort-asc"></i>}
            else
            {<i class="fa fa-sort-desc"></i> }
        }
        else
        {<i class="fa fa-sort"></i>}
    </a>
}

@if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
{
    <div class="form-inline nopadding">
        <div class="pull-right" id="dvServiceMsg">
            <span class='badge badge-warning'>@ViewBag.ErrorMessage</span>
        </div>
        <div class="clear"></div>
    </div>
}


@if (Model.SearchFilter.TotalRecords == 0)
{
    string sortField = Model.SearchFilter.SortField;
    string sortOrder = Model.SearchFilter.SortOrder;
    <div class="table-responsive margin-top-10">
        <table class="table table-hover datatable">
            <thead>
                <tr>
                    <th style="width:6%!important;">Action</th>
                    <th style="width:10%!important;">Product Group</th>
                    <th style="width:10%!important;">Product</th>
                    @*<th style="width:10%!important;">Grade/สถานะ</th>*@
                    <th style="width:10%!important;">เลขที่บัญชี/สัญญา/เลขที่กรมธรรม์</th>
                    <th style="width:7%!important;">วันที่เริ่มต้น</th>
                    <th style="width:7%!important;">วันที่สิ้นสุด</th>
                    <th style="width:5%!important;">ทะเบียนรถยนต์</th>
                    <th style="width:5%!important;">สถานะบัญชี/สัญญา</th>
                    <th style="width:5%!important;">BundleCode</th>
                    <th style="width:10%!important;">Email</th>
                    <th style="width:5%!important;">เบอร์โทร</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td colspan="11" class="center">@Resource.Msg_NoRecords</td>
                </tr>
            </tbody>
        </table>
    </div>
}
else
{
    string sortField = Model.SearchFilter.SortField;
    string sortOrder = Model.SearchFilter.SortOrder;

    <div class="form-inline nopadding">
        <div class="form-group">
            @Html.Raw(Html.Pager(
                new Options
                {
                    PageSize = Model.SearchFilter.PageSize,
                    TotalItemCount = Model.SearchFilter.TotalRecords,
                    CurrentPage = Model.SearchFilter.PageNo,
                    ItemTexts = new ItemTexts
                    {
                        First = "<i class='fa fa-step-backward' style='font-size: 0.8em'></i>",
                        Previous = "<i class='fa fa-caret-left'></i>",
                        Next = "<i class='fa fa-caret-right'></i>",
                        Last = "<i class='fa fa-step-forward' style='font-size: 0.8em'></i>"
                    },
                    IsShowFirstLast = true,
                    CssClass = "pager",
                    IsShowInputPage = true
                },
                new { PageSize = ViewBag.PageSize }))
        </div>
        <div class="form-group">
            @Html.DropDownList("PageSize", new SelectList(ViewBag.PageSizeList, "Key", "Value"), new { @class = "form-control input-xs", id = "pagesizelist" })
        </div>
        <div class="form-group text-nowrap margin-left-8">
            <strong>
                @MvcHtmlString.Create(string.Format(Resource.Lbl_Paging, @Model.SearchFilter.FirstPageIndex, @Model.SearchFilter.LastPageIndex, @Model.SearchFilter.TotalRecordsDisplay))
            </strong>
        </div>
    </div>

    <div class="table-responsive">
        <table class="table datatable">
            <thead>
                <tr>
                    <th class="center text-nowrap" style="width:5%!important;">Action</th>
                    <th class="center text-nowrap" style="width:7%!important;">@LabelForSort("Product Group", "AccountTypeDescription", sortField, sortOrder)</th>
                    <th class="center text-nowrap" style="width:10%!important;">@LabelForSort("Product", "Product", sortField, sortOrder)</th>
                    <th class="center text-nowrap" style="width:10%!important;">@LabelForSort("เลขที่บัญชี/สัญญา/เลขที่กรมธรรม์", "AccountNo", sortField, sortOrder)</th>
                    <th class="center text-nowrap" style="width:7%!important;">@LabelForSort("วันที่เริ่มต้น", "EffectiveDate", sortField, sortOrder)</th>
                    <th class="center text-nowrap" style="width:7%!important;">@LabelForSort("วันที่สิ้นสุด", "ExpiryDate", sortField, sortOrder)</th>
                    <th class="center text-nowrap" style="width:10%!important;">@LabelForSort("ทะเบียนรถยนต์", "CarNo", sortField, sortOrder)</th>
                    <th class="center text-nowrap" style="width:10%!important;">@LabelForSort("สถานะบัญชี/สัญญา", "Status", sortField, sortOrder)</th>
                    <th class="center text-nowrap" style="width:10%!important;">BundleCode</th>
                    <th class="center text-nowrap" style="width:10%!important;">Email</th>
                    <th class="center text-nowrap" style="width:10%!important;">เบอร์โทร</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.AccountList)
                {
                    string addSrClick = string.Format("initNewSR('{0}','{1}','{2}');", item.CustomerId, item.AccountId, item.AccountNo);
                    <tr>
                        <td class="center text-nowrap">
                            @if (Model.SearchFilter.IsLookUpMode == false)
                            {
                                if ((item.CustomerNumber ?? 0) > 0)
                                {
                                    var custNo = item.CustomerNumber ?? 0;
                                    var cbsCardTypeCode = (Model.CustomerInfo.CbsCardType == null ? "" : Model.CustomerInfo.CbsCardType.CardTypeCode);
                                    var cbsCardTypeName = (Model.CustomerInfo.CbsCardType == null ? "" : Model.CustomerInfo.CbsCardType.CardTypeName);
                                    //var subTypeCodeCBS = (Model.CustomerInfo.SubscriptType == null ? "" : Model.CustomerInfo.SubscriptType.SubscriptTypeId);
                                    var titleTh = (Model.CustomerInfo.TitleThai == null ? "" : Model.CustomerInfo.TitleThai.TitleName);
                                    var titleEn = (Model.CustomerInfo.TitleEnglish == null ? "" : Model.CustomerInfo.TitleEnglish.TitleName);
                                    var cardNo = Model.CustomerInfo.CardNo ?? "";
                                    var custFNameTh = Model.CustomerInfo.FirstNameThai ?? "";
                                    var custLNameTh = Model.CustomerInfo.LastNameThai ?? "";
                                    var custFNameEn = Model.CustomerInfo.FirstNameEnglish ?? "";
                                    var custLNameEn = Model.CustomerInfo.LastNameEnglish ?? "";
                                    var empCode = Model.CustomerInfo.EmployeeCode;
                                    var custType = Model.CustomerInfo.CustomerType.ToString();
                                    var phone = "";
                                    var fax = Model.CustomerInfo.Fax;
                                    var email = Model.CustomerInfo.Email;
                                    var birthDate = Model.CustomerInfo.BirthDateDisplay;
                                    var accId = item.AccountId ?? 0;
                                    var accStatId = item.AccountStatus;
                                    var accStat = item.StatusDisplay;
                                    var actionUrl = Url.Action("Create", "ServiceRequest");

                                    //initNewSRWithDefaData() ==> sr.js
                                    addSrClick = string.Format("initNewSRWithDefaData('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}'"
                                                                    + ",'{9}','{10}','{11}','{12}','{13}','{14}'"
                                                                    + ",'{15}','{16}', '{17}', '{18}'"
                                                                    + ", '{19}', '{20}', '{21}', '{22}', '{23}', '{24}')"
                                                        , actionUrl, item.CustomerId ?? 0, custNo, cardNo, cbsCardTypeCode, cbsCardTypeName, custType, birthDate
                                                        , titleTh, custFNameTh, custLNameTh, titleEn, custFNameEn, custLNameEn
                                                        , phone, fax, email, empCode
                                                        , accId, item.AccountNo, accStat, accStatId, item.AccountTypeDescription, item.Product, item.BranchName, item.CarNo);
                                }

                                <a href="javascript:;" class="add" title="New SR" onclick="@addSrClick"></a>
                                if (Model.CustomerInfo.CustomerType == Constants.CustomerType.Customer)
                                {
                                    switch (item.AccountType)
                                    {
                                        case Constants.AccountType.CurrentAccount:
                                        case Constants.AccountType.SavingsAccount:
                                        case Constants.AccountType.LoanAccount:
                                        case Constants.AccountType.TermDepositAccount:
                                            <span class="line-space"></span>
                                            <a href="javascript:;" class="view" title="View" 
                                               onclick="initViewDetailProduct('@item.ServiceInquiryProduct', '@item.AccountNo', '@item.CustomerNumber', '@item.CustomerId' );"></a>
                                            break;
                                        default:
                                            break;
                                    }
                                }
                            }
                            else
                            {
                                //Call From ServiceRequestController.SearchAccount
                                int accNo = item.AccountId ?? 0;
                                <a href='javascript:;'
                                    onclick='onSelectAccountClick(@accNo, "@item.AccountNo", "@item.StatusDisplay","@item.AccountStatus", "@item.CarNo", @Html.Raw(Json.Encode(item.AccountTypeDescription)), @Html.Raw(Json.Encode(item.Product)), "@item.BranchName")' class='btn btn-success btn-xs'>เลือก</a>
                                
                            }
                        </td>
                        <td class="left text-nowrap">@item.AccountTypeDescription</td>
                        <td class="left text-nowrap">@item.Product </td>
                        @*<td class="left text-nowrap">@item.Grade</td>*@
                        <td class="center text-nowrap">@item.AccountDescDisplay</td>
                        <td class="center">@item.EffectiveDateDisplay</td>
                        <td class="center">@item.ExpiryDateDisplay</td>
                        <td>@item.CarNo</td>
                        <td>@item.StatusDisplay</td>
                        <td>@item.BundleCode</td>
                        <td>@item.CustomerEmail</td>
                        <td>@item.CustomerMobileNo</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}