@model CSM.Web.Models.CustomerViewModel
@using CSM.Common.Resources;
@{
    ViewBag.Title = Resource.Lbl_SearchCustomer;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section MainMenu
{
    @Html.Action("MainMenu", "MenuNavigator", new { selectedMenu = CSM.Entity.MenuCode.Customer })
}

@section Breadcrumb {
    <strong class="font-blue">@Resource.Lbl_Customer</strong>
    <strong class="font-green-jungle">&rsaquo;&rsaquo; @Resource.Lbl_SearchCustomer</strong>
}

@using (Html.BeginForm("Search", "Customer", FormMethod.Post, new { @class = "form-horizontal", @id = "form1", @DefaultButton = "btnSearch" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.IsSelected, new { @id = "hddIsSelectd" })
    <div id="dvForm" class="form-box">
        <h5 class="form-title">Search Customer</h5>

        <div class="row">
            @*1*@
            <div class="col-md-5">
                <div class="form-group">
                    <div class="col-md-4">
                        <p class="form-control-static">
                            ชื่อลูกค้า
                        </p>
                    </div>
                    <div class="col-md-6 nopadding">
                        @Html.TextBoxFor(model => model.SearchFilter.FirstName, new
                   {
                       @class = "form-control input-sm",
                       @id = "txtFirstName",
                       @style = "text-transform: uppercase",
                       @maxlength = 50
                   })
                        @Html.ValidationMessageFor(model => model.SearchFilter.FirstName)
                    </div>
                    <div class="col-md-2">
                        <p class="form-control-static">
                            @Html.CheckBoxFor(model => model.SearchFilter.ExactFirstName, new { @id = "chkExactFirstName" })
                            Exact
                        </p>
                    </div>
                </div>
            </div>
            <div class="col-md-5">
                <div class="form-group">
                    <div class="col-md-4">
                        <p class="form-control-static">
                            นามสกุลลูกค้า
                        </p>
                    </div>
                    <div class="col-md-6 nopadding">
                        @Html.TextBoxFor(model => model.SearchFilter.LastName, new
                       {
                           @class = "form-control input-sm",
                           @id = "txtLastName",
                           @style= "text-transform: uppercase",
                           @maxlength = 50
                       })
                        @Html.ValidationMessageFor(model => model.SearchFilter.LastName)
                    </div>
                    <div class="col-md-2">
                        <p class="form-control-static">
                            @Html.CheckBoxFor(model => model.SearchFilter.ExactLastName, new { @id = "chkExactLastName" })
                            Exact
                        </p>
                    </div>
                </div>
            </div>

        </div>
        <div class="row">
            @*2*@
            <div class="col-md-5">
                <div class="form-group">
                    <div class="col-md-4">
                        <p class="form-control-static">
                            เบอร์โทรศัพท์/อีเมล์
                        </p>
                    </div>
                    <div class="col-md-6 nopadding">
                        @Html.TextBoxFor(model => model.SearchFilter.PhoneNo, new
                        {
                            @class = "form-control input-sm",
                            @id = "txtPhoneNo"
                        })
                        @Html.ValidationMessageFor(model => model.SearchFilter.PhoneNo)
                    </div>
                    <div class="col-md-2">
                        <p class="form-control-static">
                            @Html.CheckBoxFor(model => model.SearchFilter.ExactPhoneNo, new { @id = "chkExactPhoneNo" })
                            Exact
                        </p>
                    </div>
                </div>
            </div>
            <div class="col-md-5">
                <div class="form-group">
                    <div class="col-md-4">
                        <p class="form-control-static" title="เลขที่บัตรประชาชน/นิติบุุคคล/Passport/Employee No.">
                            ID Number
                        </p>
                    </div>
                    <div class="col-md-6 nopadding">
                        @Html.TextBoxFor(model => model.SearchFilter.CardNo, new
                        {
                            @class = "form-control input-sm",
                            @id = "txtCardNo",
                            @maxlength = @CSM.Common.Utilities.Constants.MaxLength.CardNo
                        })
                        @Html.ValidationMessageFor(model => model.SearchFilter.CardNo)
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            @*3*@
            <div class="col-md-5">
                <div class="form-group">
                    <div class="col-md-4">
                        <p class="form-control-static">
                            Product
                        </p>
                    </div>
                    <div class="col-md-6 nopadding">
                        @Html.DropDownListFor(model => model.SearchFilter.Product, Model.CustomerProductList,
                                      Resource.Ddl_PleaseSelect, new { @class = "form-control input-sm", id = "ddlCustomerProduct" })
                    </div>
                </div>
            </div>
            <div class="col-md-5">
                <div class="form-group">
                    <div class="col-md-4">
                        <p class="form-control-static">
                            เลขที่บัญชี/สัญญา/เลขที่กรมธรรม์
                        </p>
                    </div>
                    <div class="col-md-6 nopadding">
                        @Html.TextBoxFor(model => model.SearchFilter.AccountNo, new
                        {
                            @class = "form-control input-sm",
                            @id = "txtAccountNo",
                            @maxlength = 100,
                            @disabled = true
                        })
                        @Html.ValidationMessageFor(model => model.SearchFilter.AccountNo)
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            @*4*@
            <div class="col-md-5">
                <div class="form-group">
                    <div class="col-md-4">
                        <p class="form-control-static">
                            ประเภทลูกค้า
                        </p>
                    </div>
                    <div class="col-md-6 nopadding">
                        @Html.DropDownListFor(model => model.SearchFilter.CustomerType, Model.CustomerTypeList,
                                      Resource.Ddl_PleaseSelect, new { @class = "form-control input-sm", id = "ddlCustomerType" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            @*5*@
            <div class="col-md-5">
                <div class="form-group">
                    <div class="col-md-4">
                        <p class="form-control-static ">
                            ทะเบียนรถยนต์<br />
                            <font color="red">Partial Search %xxxxx</font>
                        </p>
                    </div>
                    <div class="col-md-6 nopadding">
                        @Html.TextBoxFor(model => model.SearchFilter.Registration, new
                        {
                            @class = "form-control input-sm",
                            @id = "txtRegistration",
                            @maxlength = 50
                        })
                        @Html.ValidationMessageFor(model => model.SearchFilter.Registration)
                    </div>
                    <div class="col-md-2">
                        <p class="form-control-static">
                            
                        </p>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-5">
                <div class="form-group">
                    <div class="col-md-4">
                        <p class="form-control-static ">
                            ชื่อผู้ค้ำ<br />
                            <font color="red">Partial Search xxxxx%</font>
                        </p>
                        
                    </div>
                    <div class="col-md-6 nopadding">
                        @Html.TextBoxFor(model => model.SearchFilter.CustomerDeptFirstName, new
                        {
                            @class = "form-control input-sm",
                            @id = "txtCustomerDeptFirstName",
                            @maxlength = 50
                        })
                        @Html.ValidationMessageFor(model => model.SearchFilter.CustomerDeptFirstName)
                    </div>
                    
                </div>
            </div>
            <div class="col-md-5">
                <div class="form-group">
                    <div class="col-md-4">
                        <p class="form-control-static ">
                            นามสกุลผู้ค้ำ<br />
                            <font color="red">Partial Search xxxxx%</font>
                        </p>
                    </div>
                    <div class="col-md-6 nopadding">
                        @Html.TextBoxFor(model => model.SearchFilter.CustomerDeptLastName, new
                        {
                            @class = "form-control input-sm",
                            @id = "txtCustomerDeptLastName",
                            @maxlength = 50
                        })
                        @Html.ValidationMessageFor(model => model.SearchFilter.CustomerDeptLastName)
                    </div>
                    
                </div>
            </div>
        </div>
    </div>
    <div class="clear"></div>
    <div class="panel-actions">
        <div class="pull-left">
            <button id="btnAdd" type="button" class="btn btn-green btn-sm">
                <i class="fa fa-plus"></i>&nbsp;New Customer
            </button>
        </div>
        <div class="pull-right">
            <div class="form-inline">
                <div class="form-group">
                    <button id="btnSearch" type="button" class="btn btn-blue btn-sm btn-xsmall">
                        <i class="fa fa-search"></i>&nbsp;Search
                    </button>
                </div>
                <div class="form-group">
                    <button id="btnReset" type="button" class="btn btn-gray btn-sm btn-xsmall">Clear</button>
                </div>
                <div class="form-group">
                    <button id="btnClearIVR" type="button" class="btn btn-gray btn-sm btn-xsmall">Clear CallId</button>
                </div>
            </div>
        </div>
    </div>
    <div class="clear"></div>
    <div id="dvSearchResult">
        @if (Model.CustomerList != null)
        {
            Html.RenderPartial("~/Views/Customer/_CustomerList.cshtml", Model);
        }
    </div>
}

<div class="clear"></div>
<div id="modalShowHPCustomer"class="modal fade" data-backdrop="static" data-keyboard="false" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button class="close" aria-hidden="true" data-dismiss="modal" type="button">×</button>
                <h4 class="modal-title">Select Customer</h4>
            </div>
            <div class="modal-body" id="modalShowHPCustomerBody">
            </div>
            <div class="modal-footer">
                <span class="btn btn-sm btn-default" data-dismiss="modal"><i class="fa fa-times"></i> Cancel</span>
            </div>
        </div>
    </div>
</div>




<div id="dvTarget"></div>
@section masterjs
{
    <script type="text/javascript">
        var searchFilter;
        var successFilter;
        var pageSize = 20; // for autocomplete
        var expandValue = 0;

        $jq(document).ready(function () {
            initializeSearchFilter();

            $jq("#form1").keypress(function (e) {
                var kCode = e.keyCode || e.charCode; //for cross browser
                if (kCode == 13) {
                    var defaultbtn = $jq(this).attr("DefaultButton");
                    $jq("#" + defaultbtn).focus();
                    $jq("#" + defaultbtn).click();
                    return false;
                }
            });

            $jq("#btnSearch").click(function (e) {
                e.preventDefault();
                clearServerErrors();
                searchFilter.FirstName = $jq("#txtFirstName").val().toUpperCase().trim(),
                    searchFilter.LastName = $jq("#txtLastName").val().toUpperCase().trim(),
                    searchFilter.CardNo = $jq("#txtCardNo").val().trim(),
                    searchFilter.AccountNo = $jq("#txtAccountNo").val().trim(),
                    searchFilter.PhoneNo = $jq("#txtPhoneNo").val().trim(),
                    searchFilter.CustomerType = $jq("#ddlCustomerType").val(),
                    searchFilter.Registration = $jq("#txtRegistration").val().trim(),
                    searchFilter.Product = $jq("#ddlCustomerProduct").val(),
                    searchFilter.CustomerDeptFirstName = $jq("#txtCustomerDeptFirstName").val(),
                    searchFilter.CustomerDeptLastName = $jq("#txtCustomerDeptLastName").val(),
                    searchFilter.ExactFirstName = $jq("#chkExactFirstName").is(":checked"),
                    searchFilter.ExactLastName = $jq("#chkExactLastName").is(":checked"),
                    searchFilter.ExactPhoneNo = $jq("#chkExactPhoneNo").is(":checked"),
                    searchFilter.PageNo = 1;

                loadData();
                return false;
            });

            $jq("#btnReset").click(function (e) {
                e.preventDefault();
                $jq("#dvForm input[type='text'],#dvForm select").val('');
                initializeSearchFilter();
                $jq("#dvSearchResult").html('');
                $jq("#txtAccountNo").prop("disabled", true);
                $jq("#txtAccountNo").val('');
                $jq("#chkExactFirstName").prop("checked", false);
                $jq("#chkExactLastName").prop("checked", false);
                $jq("#chkExactPhoneNo").prop("checked", false);
                clearServerErrors();
                return false;
            });

            $jq('#btnAdd').click(function (e) {
                e.preventDefault();
                initCustomerEdit();
                return false;
            });

            $jq('#btnClearIVR').click(function (e) {
                e.preventDefault();
                clearCallId();
                return false;
            });


            $jq("#ddlCustomerProduct").change(function (event) {
                if ($jq(this).val() != '') {
                    $jq("#txtAccountNo").prop("disabled", false);
                }
                else {
                    $jq("#txtAccountNo").prop("disabled", true);
                    $jq("#txtAccountNo").val('');
                }
                return false;
            });

            initializePaging();

            $jq('.btn-toggle').click(function () {
                var o = $jq(this).find('span');
                if (o.hasClass('minimize')) {
                    o.removeClass('minimize').addClass('expand').text('[+]');
                    expandValue = 0;
                } else {
                    o.removeClass('expand').addClass('minimize').text('[-]');
                    expandValue = 1;
                }
                ShowhidePanel(expandValue);
            });

            //show hide panel
            if ($jq("#hddIsSelectd").val() == "1") {
                $jq('.btn-toggle').find('span').removeClass('expand').addClass('minimize').text('[-]');
                $jq('#pnlAdvSearch').removeClass('collapse').addClass('collapse in');
            }
        });

        function initializeSearchFilter() {
            searchFilter = {
                FirstName: $jq("#txtFirstName").val(),
                LastName: $jq("#txtLastName").val(),
                CardNo: $jq("#txtCardNo").val(),
                AccountNo: $jq("#txtAccountNo").val(),
                PhoneNo: $jq("#txtPhoneNo").val(),
                CustomerType: $jq("#ddlCustomerType").val(),
                Registration: $jq("#txtRegistration").val(),
                Product: $jq("#ddlCustomerProduct").val(),
                CustomerDeptFirstName: $jq("#txtCustomerDeptFirstName").val(),
                CustomerDeptLastName: $jq("#txtCustomerDeptLastName").val(),
                PageNo: '@Model.SearchFilter.PageNo',
                PageSize: '@Model.SearchFilter.PageSize',
                SortField: '@Model.SearchFilter.SortField',
                SortOrder: '@Model.SearchFilter.SortOrder'
            };
            successFilter = searchFilter;
        };

        function initializePaging() {
            $jq("#dvSearchResult .input-page").change(function (event) {
                searchFilter = successFilter;
                searchFilter.PageNo = $jq(this).val();
                loadData();
                return false;
            }).keypress(function (event) {
                return validateDigit(event);
            });

            $jq("#dvSearchResult #pagesizelist").change(function (event) {
                searchFilter = successFilter;
                searchFilter.PageNo = "1";
                searchFilter.PageSize = $jq(this).val();
                loadData();
                return false;
            });

            $jq('#dvSearchResult .pagination ul li a').on('click', function (event) {
                searchFilter = successFilter;
                searchFilter.PageNo = getUrlParameter($jq(this).attr("href"), "page");
                loadData();
                return false;
            });

            try {
                $jq("#tblCustomerList").tableHeadFixer({ "head": false, "left": 3 });
            }
            catch (e) { }
        };

        function loadData() {

            if (searchFilter.FirstName === "" && searchFilter.LastName === "" && searchFilter.CardNo === ""
                 && searchFilter.AccountNo === "" && searchFilter.PhoneNo === "" && searchFilter.CustomerType === ""
                 && searchFilter.Registration === "" && searchFilter.Product === ""
                 && searchFilter.CustomerDeptFirstName === "" && searchFilter.CustomerDeptLastName === ""
                ) {
                var warningMsg = '@Resource.Msg_EnteredAtLeastOneCriteria';
                doModal('dvAlertMsg', 'Message Dialog', warningMsg, '', '');
                return false;
            }

            //กรณีเลือก Product แล้วจะต้องระบุเลขที่สัญญาด้วย
            if (searchFilter.Product != "" && searchFilter.AccountNo === "") {
                var warningMsg = '@Resource.Msg_PleaseInputAccountNo';
                doModal('dvAlertMsg', 'Message Dialog', warningMsg, '', '');
                return false;
            }

            //กรณีเลือก Customer Type แล้ว ให้บังคับให้เลือกเงื่อนไข อื่นๆ เพิ่มด้วย
            if (searchFilter.FirstName === "" && searchFilter.LastName === "" && searchFilter.CardNo === ""
                 && searchFilter.AccountNo === "" && searchFilter.PhoneNo === "" && searchFilter.CustomerType != ""
                 && searchFilter.Registration == ""
                 && searchFilter.CustomerDeptFirstName === "" && searchFilter.CustomerDeptLastName === ""
                ) {
                var warningMsg = '@Resource.Msg_EnteredCriteriaWithCustType';
                doModal('dvAlertMsg', 'Message Dialog', warningMsg, '', '');
                return false;
            }

            $jq.ajax({
                url: '@Url.Action("CustomerList", "Customer")',
                type: "POST",
                data: addAntiForgeryToken(searchFilter),
                beforeSend: function () { $jq("#dvLoading").show(); },
                complete: function () { $jq("#dvLoading").hide(); },
                success: function (result) {
                    if (result.Valid == null) {
                        $jq("#dvSearchResult").html('');
                        successFilter = searchFilter;
                        $jq("#dvSearchResult").html(result);
                        initializePaging();

                    } else if (result.Valid == true) {
                        successFilter = searchFilter;
                        $jq("#modalShowHPCustomerBody").html(result.ResultView);
                        $jq("#modalShowHPCustomer").modal("show");
                    } else {
                        showServerErrors2(result);
                    }
                },
                error: function (xhr) {
                    var handleMsg = '@CSM.Common.Resources.Resource.Error_System';
                    ajaxErrorHandling(xhr, handleMsg, '@FormsAuthentication.LoginUrl', '@Url.Action("AccessDenied", "User")');
                }
            });
            return false;
        };

        function sortField(selectedSortField) {
            if (selectedSortField == searchFilter.SortField)
                searchFilter.SortOrder = (searchFilter.SortOrder == 'ASC') ? 'DESC' : 'ASC';
            else
                searchFilter.SortOrder = 'ASC';
            searchFilter.SortField = selectedSortField;
            searchFilter.PageNo = 1;
            loadData();
        }

        function initCustomerEdit(customerId) {
            var actionUrl = '@Url.Action("InitEditCustomer", "Customer")';
            $jq('#dvTarget').html('');
            var inputCustomerId = $jq("<input>").attr("type", "hidden").attr("name", "customerId").val(customerId);
            var inputToken = $jq("<input>").attr("type", "hidden").attr("name", "__RequestVerificationToken").val(getAntiForgeryToken());
            $jq('#dvTarget').append('<form action="' + actionUrl + '" method="POST" class="hidden" target="_blank"></form>');
            $jq('#dvTarget form').append($jq(inputCustomerId));
            $jq('#dvTarget form').append($jq(inputToken));
            $jq('#dvTarget form').submit();
        }

        function initCustomerNote(customerId, CustomerNumber, CustomerType, BirthDate, IDNumber, SubscriptTypeCode, SubscriptTypeName, SubscriptTypeCodeCBS, CountryOfCitizenship, Title, PrimaryName, PrimaryLastName, AlternateTitle, AlternateFirstName, AlternateLastName, emplCode) {
            var actionUrl = '@Url.Action("InitCustomerNote", "Customer")';
            $jq('#dvTarget').html('');
            var inputCustomerId = $jq("<input>").attr("type", "hidden").attr("name", "customerId").val(customerId);
            var inputCustomerNumber = $jq("<input>").attr("type", "hidden").attr("name", "customerNumber").val(CustomerNumber);
            var inputCustomerType = $jq("<input>").attr("type", "hidden").attr("name", "CustomerType").val(CustomerType);
            var inputBirthDate = $jq("<input>").attr("type", "hidden").attr("name", "BirthDate").val(BirthDate);
            var inputIDNumber = $jq("<input>").attr("type", "hidden").attr("name", "IDNumber").val(IDNumber);
            var inputSubscriptTypeCode = $jq("<input>").attr("type", "hidden").attr("name", "SubscriptTypeCode").val(SubscriptTypeCode);
            var inputSubscriptTypeName = $jq("<input>").attr("type", "hidden").attr("name", "SubscriptTypeName").val(SubscriptTypeName);
            var inputSubscriptTypeCodeCBS = $jq("<input>").attr("type", "hidden").attr("name", "SubscriptTypeCodeCBS").val(SubscriptTypeCodeCBS);
            var inputCountryOfCitizenship = $jq("<input>").attr("type", "hidden").attr("name", "CountryOfCitizenship").val(CountryOfCitizenship);
            var inputTitle = $jq("<input>").attr("type", "hidden").attr("name", "Title").val(Title);
            var inputPrimaryName = $jq("<input>").attr("type", "hidden").attr("name", "PrimaryName").val(PrimaryName);
            var inputPrimaryLastName = $jq("<input>").attr("type", "hidden").attr("name", "PrimaryLastName").val(PrimaryLastName);
            var inputAlternateTitle = $jq("<input>").attr("type", "hidden").attr("name", "AlternateTitle").val(AlternateTitle);
            var inputAlternateFirstName = $jq("<input>").attr("type", "hidden").attr("name", "AlternateFirstName").val(AlternateFirstName);
            var inputAlternateLastName = $jq("<input>").attr("type", "hidden").attr("name", "AlternateLastName").val(AlternateLastName);
            var inputEmplCode = $jq("<input>").attr("type", "hidden").attr("name", "emplCode").val(emplCode);
            //var inputCustomerAddress = $jq("<input>").attr("type", "hidden").attr("name", "CustomerAddress").val(CustomerAddress);

            var inputToken = $jq("<input>").attr("type", "hidden").attr("name", "__RequestVerificationToken").val(getAntiForgeryToken());

            $jq('#dvTarget').append('<form action="' + actionUrl + '" method="POST" class="hidden" target="_blank"></form>');
            $jq('#dvTarget form').append($jq(inputCustomerId));
            $jq('#dvTarget form').append($jq(inputCustomerNumber));
            $jq('#dvTarget form').append($jq(inputCustomerType));
            $jq('#dvTarget form').append($jq(inputBirthDate));
            $jq('#dvTarget form').append($jq(inputIDNumber));
            $jq('#dvTarget form').append($jq(inputSubscriptTypeCode));
            $jq('#dvTarget form').append($jq(inputSubscriptTypeName));
            $jq('#dvTarget form').append($jq(inputSubscriptTypeCodeCBS));
            $jq('#dvTarget form').append($jq(inputCountryOfCitizenship));
            $jq('#dvTarget form').append($jq(inputTitle));
            $jq('#dvTarget form').append($jq(inputPrimaryName));
            $jq('#dvTarget form').append($jq(inputPrimaryLastName));
            $jq('#dvTarget form').append($jq(inputAlternateTitle));
            $jq('#dvTarget form').append($jq(inputAlternateFirstName));
            $jq('#dvTarget form').append($jq(inputAlternateLastName));
            $jq('#dvTarget form').append($jq(inputEmplCode));
            //$jq('#dvTarget form').append($jq(inputCustomerAddress));
            $jq('#dvTarget form').append($jq(inputToken));
            $jq('#dvTarget form').submit();
        }

        function initNewSR(customerId, accountId, contactId) {
            var actionUrl = '@Url.Action("Create", "ServiceRequest")';
            $jq('#dvTarget').html('');
            var inputCustomerId = $jq("<input>").attr("type", "hidden").attr("name", "CustomerId").val(customerId);
            var inputAccountId = $jq("<input>").attr("type", "hidden").attr("name", "AccountId").val(accountId);
            var inputContactId = $jq("<input>").attr("type", "hidden").attr("name", "ContactId").val(contactId);
            var inputToken = $jq("<input>").attr("type", "hidden").attr("name", "__RequestVerificationToken").val(getAntiForgeryToken());
            $jq('#dvTarget').append('<form action="' + actionUrl + '" method="POST" class="hidden" target="_blank"></form>');
            $jq('#dvTarget form').append($jq(inputToken));
            $jq('#dvTarget form').append($jq(inputCustomerId));
            $jq('#dvTarget form').append($jq(inputAccountId));
            $jq('#dvTarget form').append($jq(inputContactId));
            $jq('#dvTarget form').submit();
        }

        function clearCallId() {
            var actionUrl = '@Url.Action("ClearIVR", "Customer")';
            $jq('#dvTarget').html('');
            var inputToken = $jq("<input>").attr("type", "hidden").attr("name", "__RequestVerificationToken").val(getAntiForgeryToken());
            $jq('#dvTarget').append('<form action="' + actionUrl + '" method="POST" class="hidden"></form>');
            $jq('#dvTarget form').append($jq(inputToken));
            $jq('#dvTarget form').submit();
        }

        function ShowhidePanel(expandValue) {
            var data = {
                expandValue: expandValue
            };
            $jq.ajax({
                url: '@Url.Action("ShowhidePanel", "Customer")',
                type: "POST",
                data: addAntiForgeryToken(data),
                beforeSend: function () { $jq("#dvLoading").show(); },
                complete: function () { $jq("#dvLoading").hide(); },
                success: function (result) {
                },
                error: function (xhr) {
                    var handleMsg = '@CSM.Common.Resources.Resource.Error_System';
                    ajaxErrorHandling(xhr, handleMsg, '@FormsAuthentication.LoginUrl', '@Url.Action("AccessDenied", "User")');
                }
            });

            return false;
        }

        function inquiryCustomerInformationByHP(cardNo) {

            clearServerErrors();
            //searchFilter.FirstName = fNameTh,
            //    searchFilter.LastName = lNameTh,
            searchFilter.CardNo = cardNo,
            //    searchFilter.CustomerType = custType,
            //    searchFilter.ExactFirstName = false,
            //    searchFilter.ExactLastName = false,
                searchFilter.Registration = "",
                searchFilter.CustomerDeptFirstName = "",
                searchFilter.CustomerDeptLastName = "",
                searchFilter.Product = "",
                searchFilter.PageNo = 1;

            loadData();

            $jq("#modalShowHPCustomerBody").html('');
            $jq("#modalShowHPCustomer").modal("hide");
            return false;
        }

    </script>
}
