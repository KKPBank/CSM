@model CSM.Web.Models.InstructionViewModel
@using CSM.Common.Resources
@using CSM.Common.Utilities
@using MvcPaging;
@helper LabelForSort(string headerText, string fieldName, string sortField, string sortOrder)
{
    <a href="javascript:;" onclick="sortField('@fieldName');return false;">
        @headerText
        @if (fieldName.ToLower().Equals(sortField.ToLower()))
        {
            if (sortOrder.Equals("ASC"))
            {<i class="fa fa-sort-asc"></i>}
            else
            {<i class="fa fa-sort-desc"></i> }
        }
        else
        {<i class="fa fa-sort"></i>}
    </a>
}

@if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
{
    <div class="form-inline nopadding">
        <div class="pull-right" id="dvServiceMsg">
            <span class='badge badge-warning'>@ViewBag.ErrorMessage</span>
        </div>
        <div class="clear"></div>
    </div>
}

@if (Model.SearchFilter.TotalRecords == 0)
{
    string sortField = Model.SearchFilter.SortField;
    string sortOrder = Model.SearchFilter.SortOrder;
    <div class="table-responsive margin-top-10">
        <table class="table table-hover datatable">
            <thead>
                <tr>
                    <th style="width:6%!important;">Action</th>
                    <th style="width:10%!important;">Bank No</th>
                    <th style="width:10%!important;">Account No</th>
                    <th style="width:24%!important;">Name</th>
                    <th style="width:30%!important;">Instruction Desc</th>
                    <th style="width:10%!important;">Effective Date</th>
                    <th style="width:10%!important;">Subscription Status</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td colspan="7" class="center">@Resource.Msg_NoRecords</td>
                </tr>
            </tbody>
        </table>
    </div>
}
else
{
    string sortField = Model.SearchFilter.SortField;
    string sortOrder = Model.SearchFilter.SortOrder;
    <div class="form-inline nopadding">
        <div class="form-group">
            @Html.Raw(Html.Pager(
                new Options
                {
                    PageSize = Model.SearchFilter.PageSize,
                    TotalItemCount = Model.SearchFilter.TotalRecords,
                    CurrentPage = Model.SearchFilter.PageNo,
                    ItemTexts = new ItemTexts
                    {
                        First = "<i class='fa fa-step-backward' style='font-size: 0.8em'></i>",
                        Previous = "<i class='fa fa-caret-left'></i>",
                        Next = "<i class='fa fa-caret-right'></i>",
                        Last = "<i class='fa fa-step-forward' style='font-size: 0.8em'></i>"
                    },
                    IsShowFirstLast = true,
                    CssClass = "pager",
                    IsShowInputPage = true
                },
                new { PageSize = ViewBag.PageSize }))
        </div>
        <div class="form-group">
            @Html.DropDownList("PageSize", new SelectList(ViewBag.PageSizeList, "Key", "Value"), new { @class = "form-control input-xs", id = "pagesizelist" })
        </div>
        <div class="form-group text-nowrap margin-left-8">
            <strong>
                @MvcHtmlString.Create(string.Format(Resource.Lbl_Paging, @Model.SearchFilter.FirstPageIndex, @Model.SearchFilter.LastPageIndex, @Model.SearchFilter.TotalRecordsDisplay))
            </strong>
        </div>
    </div>
    <div class="table-responsive">
        <table class="table datatable">
            <thead>
                <tr>
                    <th class="center text-nowrap" style="width:5%!important;">Action</th>
                    <th class="center text-nowrap" style="width:10%!important;">@LabelForSort("Bank Name", "BankName", sortField, sortOrder)</th>
                    <th class="center text-nowrap" style="width:10%!important;">@LabelForSort("Account No", "AccountNumber", sortField, sortOrder)</th>
                    <th class="center text-nowrap" style="width:25%!important;">@LabelForSort("Name", "CustomerName", sortField, sortOrder)</th>
                    <th class="center text-nowrap" style="width:30%!important;">@LabelForSort("Instruction Desc", "InstructionDescription", sortField, sortOrder)</th>
                    <th class="center text-nowrap" style="width:10%!important;">@LabelForSort("Effective Date", "EffectiveDate", sortField, sortOrder)</th>
                    <th class="center text-nowrap" style="width:10%!important;">@LabelForSort("Substription Status", "StatusFlag", sortField, sortOrder)</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.InstructionList)
                {
                    var custNo = item.CustomerNumber;
                    var cbsCardTypeCode = (Model.CustomerInfo.CbsCardType == null ? "" : Model.CustomerInfo.CbsCardType.CardTypeCode);
                    var cbsCardTypeName = (Model.CustomerInfo.CbsCardType == null ? "" : Model.CustomerInfo.CbsCardType.CardTypeName);
                    //var subTypeCodeCBS = (Model.CustomerInfo.CbsCardType == null ? "" : Model.CustomerInfo.SubscriptType.SubscriptTypeId);
                    var titleTh = (Model.CustomerInfo.TitleThai == null ? "" : Model.CustomerInfo.TitleThai.TitleName);
                    var titleEn = (Model.CustomerInfo.TitleEnglish == null ? "" : Model.CustomerInfo.TitleEnglish.TitleName);
                    var cardNo = Model.CustomerInfo.CardNo ?? "";
                    var custFNameTh = Model.CustomerInfo.FirstNameThai ?? "";
                    var custLNameTh = Model.CustomerInfo.LastNameThai ?? "";
                    var custFNameEn = Model.CustomerInfo.FirstNameEnglish ?? "";
                    var custLNameEn = Model.CustomerInfo.LastNameEnglish ?? "";
                    var empCode = Model.CustomerInfo.EmployeeCode;
                    var custType = Model.CustomerInfo.CustomerType.ToString();
                    var phone = "";
                    var fax = Model.CustomerInfo.Fax;
                    var email = Model.CustomerInfo.Email;
                    var birthDate = Model.CustomerInfo.BirthDateDisplay;
                    var accStat = Constants.InstructionStatus.GetMessage(item.SubscriptionStatus);
                    var actionUrl = Url.Action("Create", "ServiceRequest");

                    //initNewSRWithDefaData() ==> sr.js
                    var addSrClick = string.Format("initNewSRWithDefaData('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}'"
                                            + ",'{9}','{10}','{11}','{12}','{13}','{14}'"
                                            + ",'{15}','{16}', '{17}', '{18}'"
                                            + ", '{19}', '{20}', '{21}', '{22}', '{23}', '{24}')"
                                , actionUrl, item.CustomerId, custNo, cardNo, cbsCardTypeCode, cbsCardTypeName, custType, birthDate
                                , titleTh, custFNameTh, custLNameTh, titleEn, custFNameEn, custLNameEn
                                , phone, fax, email, empCode
                                , 0, item.AccountNumber, accStat, "", item.InstructionDescription, "", "");
                <tr>
                    <td class="center text-nowrap">
                        <a href="javascript:;" class="add" title="New SR" onclick="@addSrClick"></a>
                    </td>
                    <td class="left text-nowrap">@item.Bank.BankName</td>
                    <td class="left text-nowrap">@item.AccountNumber </td>
                    <td class="left text-nowrap">@item.CustomerName</td>
                    <td class="left text-nowrap">@item.InstructionDescription</td>
                    <td class="center text-nowrap">@item.EffectiveDateDisplay</td>
                    <td class="center text-nowrap">@accStat</td>
                </tr>
                }
            </tbody>
        </table>
    </div>
}