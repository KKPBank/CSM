@model CSM.Web.Models.CustomerViewModel
@using CSM.Common.Resources
@using CSM.Common.Utilities
@using MvcPaging;

@helper LabelForSort(string headerText, string fieldName, string sortField, string sortOrder)
{
        <a href="javascript:;" onclick="sortField('@fieldName');return false;">
            @headerText
            @if (fieldName.ToLower().Equals(sortField.ToLower()))
            {
                if (sortOrder.Equals("ASC"))
                {<i class="fa fa-sort-asc"></i>}
                else
                {<i class="fa fa-sort-desc"></i> }
            }
            else
            {<i class="fa fa-sort"></i>}
        </a>
}

@if (!string.IsNullOrEmpty(Model.InquiryCBSErrorMessage))
{
    <div class="form-inline nopadding">
        <div class="pull-right" id="dvServiceMsg">
            <span class='badge badge-warning'>@Model.InquiryCBSErrorMessage</span>
        </div>
        <div class="clear"></div>
    </div>
}

@if (Model.SearchFilter.TotalRecords == 0)
{
    string sortField = Model.SearchFilter.SortField;
    string sortOrder = Model.SearchFilter.SortOrder;
    <div class="table-responsive margin-top-10">
        <table class="table table-hover datatable">
            <thead>
                <tr>
                    <th class="center" style="width:10%!important;">Action</th>
                    <th style="width:10%!important;">Product</th>
                    <th style="width:10%!important;">CIF ID</th>
                    <th style="width:10%!important;">ชื่อลูกค้า</th>
                    <th style="width:10%!important;">นามสกุลลูกค้า</th>
                    <th style="width:10%!important;" title="เลขที่บัตรประชาชน/นิติบุุคคล/Passport/Employee No.">ID Number</th>
                    <th style="width:10%!important;">ID Type</th>
                    <th style="width:10%!important;">Customer Category</th>
                    <th style="width:5%!important;">ประเภทลูกค้า</th>
                    <th style="width:5%!important;">Product</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td colspan="13" class="center">@Resource.Msg_NoRecords</td>
                </tr>
            </tbody>
        </table>
    </div>
}
else
{
    string sortField = Model.SearchFilter.SortField;
    string sortOrder = Model.SearchFilter.SortOrder;

    <div class="form-inline nopadding">
        <div class="form-group">
            @Html.Raw(Html.Pager(
                    new Options
                    {
                        PageSize = Model.SearchFilter.PageSize,
                        TotalItemCount = Model.SearchFilter.TotalRecords,
                        CurrentPage = Model.SearchFilter.PageNo,
                        ItemTexts = new ItemTexts
                        {
                            First = "<i class='fa fa-step-backward' style='font-size: 0.8em'></i>",
                            Previous = "<i class='fa fa-caret-left'></i>",
                            Next = "<i class='fa fa-caret-right'></i>",
                            Last = "<i class='fa fa-step-forward' style='font-size: 0.8em'></i>"
                        },
                        IsShowFirstLast = true,
                        CssClass = "pager",
                        IsShowInputPage = true
                    },
                    new { PageSize = ViewBag.PageSize }))
        </div>
        <div class="form-group">
            @Html.DropDownList("PageSize", new SelectList(ViewBag.PageSizeList, "Key", "Value"), new { @class = "form-control input-xs", id = "pagesizelist" })
        </div>
        <div class="form-group text-nowrap margin-left-8">
            <strong>
                @MvcHtmlString.Create(string.Format(Resource.Lbl_Paging, @Model.SearchFilter.FirstPageIndex, @Model.SearchFilter.LastPageIndex, @Model.SearchFilter.TotalRecordsDisplay))
            </strong>
        </div>
    </div>
    <div class="table-responsive">
        <table id="tblCustomerList" class="table datatable" style="width:1890px!important;">
            <thead>
                <tr>
                    <th class="center text-nowrap">Action</th>
                    <th class="center text-nowrap">@LabelForSort("CIF ID", "CIF_ID", sortField, sortOrder)</th>
                    <th class="center text-nowrap">@LabelForSort("ชื่อลูกค้า", "FirstNameThai", sortField, sortOrder)</th>
                    <th class="center text-nowrap">@LabelForSort("นามสกุลลูกค้า", "LastNameThai", sortField, sortOrder)</th>   
                    <th class="center text-nowrap" title="เลขที่บัตรประชาชน/นิติบุุคคล/Passport/Employee No.">@LabelForSort("ID Number", "CardNo", sortField, sortOrder)</th> 
                    <th class="center text-nowrap">@LabelForSort("ID Type", "SubscriptTypeCode", sortField, sortOrder)</th>
                    <th class="center text-nowrap">@LabelForSort("Customer Category", "CustomerCategory", sortField, sortOrder)</th>
                    <th class="center text-nowrap">@LabelForSort("ประเภทลูกค้า", "CustomerType", sortField, sortOrder)</th>
                    <th class="center text-nowrap">@LabelForSort("Product", "AccountTypeDescription", sortField, sortOrder)</th>
                    
                    @*<th class="center text-nowrap">@LabelForSort("ID Type", "SubscriptTypeName", sortField, sortOrder)</th>*@
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.CustomerList)
                {
                    var customerId = item.CustomerId ?? 0;
                    var customerNumber = item.CustomerNumber ?? 0;
                    var cardTypeCode = (item.CbsCardType != null ? item.CbsCardType.CardTypeCode : "");
                    var cardTypeName = (item.CbsCardType != null ? item.CbsCardType.CardTypeName : "");
                    var cardTypeId = (item.CbsCardType != null ? item.CbsCardType.CardTypeID : 0);

                    string addSRClick = string.Empty;
                    if (customerId > 0)
                    {
                        var accountEntity = item.Account ?? new CSM.Entity.AccountEntity();
                        var cardTypeEntity = item.CbsCardType ?? new CSM.Entity.CbsCardTypeEntity();
                        addSRClick = string.Format("initNewSR('{0}','{1}')", customerId, accountEntity.AccountId);
                    }
                    else if (customerNumber > 0)
                    {
                        var cardNo = item.CardNo;
                        var birthDate = item.BirthDateDisplay;
                        var custType = item.CustomerType;
                        var emplCode = item.EmployeeCode;
                        var titleTh = item.TitleThai.TitleName;
                        var fNameTh = item.FirstNameThai;
                        var lNameTh = item.LastNameThai;
                        var titleEn = item.TitleEnglish.TitleName;
                        var fNameEn = item.FirstNameEnglish;
                        var lNameEn = item.LastNameEnglish;
                        var phone = item.PhoneNo;
                        var fax = item.Fax;
                        var email = item.Email;
                        var actionUrl = Url.Action("Create", "ServiceRequest");
                        //initNewSRWithDefaData() ==> sr.js
                        addSRClick = string.Format("initNewSRWithDefaData('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}'"
                                        + ",'{9}','{10}','{11}','{12}','{13}','{14}'"
                                        + ",'{15}','{16}','{17}')"
                            , actionUrl, 0, customerNumber, cardNo, cardTypeCode, cardTypeName, custType, birthDate
                            , titleTh, HttpUtility.HtmlEncode(fNameTh), HttpUtility.HtmlEncode(lNameTh), titleEn, HttpUtility.HtmlEncode(fNameEn), HttpUtility.HtmlEncode(lNameEn)
                            , phone, fax, email, emplCode);
                    }

                    <tr>
                        <td class="center text-nowrap">
                            @if (Model.IsAdminNoteSearch)
                            {
                                var accountEntity = item.Account ?? new CSM.Entity.AccountEntity();
                                var viewClick = string.Format("initAdminNote('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}', '{14}');"
                                                                , customerId, customerNumber, item.CustomerType, item.BirthDate, item.CardNo, cardTypeCode, cardTypeName
                                                                , item.CountryOfCitizenship, item.TitleThai.TitleName, HttpUtility.HtmlEncode(item.FirstNameThai), HttpUtility.HtmlEncode(item.LastNameThai), item.TitleEnglish.TitleName, HttpUtility.HtmlEncode(item.FirstNameEnglish) ,HttpUtility.HtmlEncode(item.LastNameEnglish), item.EmployeeCode);
                            <a href="javascript:;" class="view" title="View" 
                                onclick="@viewClick"></a>
                            }
                            else
                            {
                            @*<a href="javascript:;" class="add" title="New SR" onclick="initNewSR('@item.CustomerId','@accountEntity.AccountId')"></a>*@
                            <a href="javascript:;" class="add" title="New SR" onclick="@addSRClick"></a>
                            <span class="line-space"></span>
                            if (item.CustomerType != null)
                            {
                                if (Constants.CustomerType.Prospect.Equals(item.CustomerType))
                                {
                                    <a href="javascript:;" class="edit-active" title="edit" onclick="initCustomerEdit('@customerId');"></a>
                                    <span class="line-space"></span>
                                }
                                else
                                {
                                    <a href="javascript:;" class="edit-disable" title="edit" onclick="return false;"></a>
                                    <span class="line-space"></span>
                                }
                            }
                            else
                            {
                                <a href="javascript:;" class="edit-disable" title="edit" onclick="return false;"></a>
                                <span class="line-space"></span>
                            }
                            <a href="javascript:;" class="view" title="View" 
                                onclick="initCustomerNote('@customerId','@customerNumber','@item.CustomerType','@item.BirthDate','@item.CardNo','@cardTypeCode','@cardTypeName', '@cardTypeId', '@item.CountryOfCitizenship','@item.TitleThai.TitleName','@HttpUtility.HtmlEncode(item.FirstNameThai)','@HttpUtility.HtmlEncode(item.LastNameThai)','@item.TitleEnglish.TitleName','@item.FirstNameEnglish.TextToHtml()','@HttpUtility.HtmlEncode(item.LastNameEnglish)', '@item.EmployeeCode');"></a>
                            }
                        </td>
                        <td>@item.CIF_ID</td>                                     
                        <td>@item.FirstNameThaiEng</td>
                        <td>@item.LastNameThaiEng</td> 
                        <td>@item.CardNo</td>
                        <td class="center">@cardTypeName</td>               
                        <td class="center">@item.CustomerCategory</td>
                        <td class="center">@item.CustomerTypeDisplay</td>
                        <td class="center">@item.Account.AccountTypeDescription</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
